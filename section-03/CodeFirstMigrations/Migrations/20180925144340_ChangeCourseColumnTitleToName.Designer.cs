// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelWithCodeFirstWorkflow;

namespace ModelWithCodeFirstWorkflow.Migrations
{
    [DbContext(typeof(PlutoContext))]
    [Migration("20180925144340_ChangeCourseColumnTitleToName")]
    partial class ChangeCourseColumnTitleToName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ModelWithCodeFirstWorkflow.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("ModelWithCodeFirstWorkflow.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ModelWithCodeFirstWorkflow.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId");

                    b.Property<int?>("CategoryID");

                    b.Property<DateTime?>("DatePublished");

                    b.Property<string>("Description");

                    b.Property<float>("FullPrice");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.HasKey("CourseID");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ModelWithCodeFirstWorkflow.CourseTag", b =>
                {
                    b.Property<int>("CourseID");

                    b.Property<int>("TagID");

                    b.HasKey("CourseID", "TagID");

                    b.HasIndex("TagID");

                    b.ToTable("CourseTag");
                });

            modelBuilder.Entity("ModelWithCodeFirstWorkflow.Tag", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("TagID");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ModelWithCodeFirstWorkflow.Course", b =>
                {
                    b.HasOne("ModelWithCodeFirstWorkflow.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("ModelWithCodeFirstWorkflow.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");
                });

            modelBuilder.Entity("ModelWithCodeFirstWorkflow.CourseTag", b =>
                {
                    b.HasOne("ModelWithCodeFirstWorkflow.Course", "Course")
                        .WithMany("CourseTag")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ModelWithCodeFirstWorkflow.Tag", "Tag")
                        .WithMany("CourseTag")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
