// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueryingDataUsingLINQ.Contexts;

namespace QueryingDataUsingLINQ.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class PlutoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QueryingDataUsingLINQ.Models.Permission", b =>
                {
                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Key");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("QueryingDataUsingLINQ.Models.Role", b =>
                {
                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Key");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("QueryingDataUsingLINQ.Models.RolePermission", b =>
                {
                    b.Property<string>("RoleKey");

                    b.Property<string>("PermissionKey");

                    b.HasKey("RoleKey", "PermissionKey");

                    b.HasIndex("PermissionKey");

                    b.ToTable("RolePermission");
                });

            modelBuilder.Entity("QueryingDataUsingLINQ.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("RoleKey")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("RoleKey");

                    b.ToTable("User");
                });

            modelBuilder.Entity("QueryingDataUsingLINQ.Models.UserPermission", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<string>("PermissionKey");

                    b.HasKey("UserId", "PermissionKey");

                    b.HasIndex("PermissionKey");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("QueryingDataUsingLINQ.Models.RolePermission", b =>
                {
                    b.HasOne("QueryingDataUsingLINQ.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionKey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QueryingDataUsingLINQ.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QueryingDataUsingLINQ.Models.User", b =>
                {
                    b.HasOne("QueryingDataUsingLINQ.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QueryingDataUsingLINQ.Models.UserPermission", b =>
                {
                    b.HasOne("QueryingDataUsingLINQ.Models.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionKey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QueryingDataUsingLINQ.Models.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
